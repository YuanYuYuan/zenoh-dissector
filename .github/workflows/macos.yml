#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
name: CI (macOS)

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 6 * * 1-5"

jobs:
  check:
    name: Run checks on macOS-latest
    runs-on: [self-hosted, "${{ matrix.os }}"]
    strategy:
      fail-fast: false
    matrix:
      os:
        - macOS
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: |
          rustup show
          rustup component add rustfmt clippy

      - name: Code format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
        env:
          CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

      # - name: Install Wireshark
      #   run: |
      #     brew install --cask wireshark
      #     cd /Applications/Wireshark.app/Contents/Frameworks
      #     [ -f libwireshark.dylib ] || ln -s $(find libwireshark.*.dylib | tail -n 1) libwireshark.dylib

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
        env:
          CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
        env:
          CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

      - name: Place the plugin
        run:
          cp ./target/release/libzenoh_dissector.dylib /Applications/Wireshark.app/Contents/PlugIns/wireshark/4-0/epan/libzenoh_dissector.so

      - name: Test the sample data
        run: |
          [ $(tshark -r assets/sample-data.pcap | grep Zenoh | wc -l) -eq 7 ] || return 1
